input{
  file {
    path => "/tmp/input.log"
    start_position => "beginning"
    file_sort_direction => "asc"
  }
}

filter {
   csv {
     columns => ["date_test","id_test","nom_test","step_test","action_test"]
     separator => ";"
   }

   date {
      match => [ "date_test", "dd/MM/yyyy" ]
   }
   mutate {
      copy => { "[@timestamp]" => "date_test" }
   }

   if [step_test] == "BEGIN" {
     aggregate {
       task_id => "%{id_test}"
       code => "map['nb_process'] = 0"
       map_action => "create"
     }
     drop {}
   }

   if [step_test] == "PROCESS" {
     aggregate {
       task_id => "%{id_test}"
       code => "
                map['nb_process'] = map['nb_process'] + 1
               "
       map_action => "update"
     }
     drop {}
   }

   if [step_test] == "END" {
     aggregate {
       task_id => "%{id_test}"
       code => "event.set('nb_process', map['nb_process'])"
       map_action => "update"
       end_of_task => true
       timeout => 120
     }
   }

   mutate {
     remove_field => ["action_test","step_test","message","path","date_test"]
   }

}

